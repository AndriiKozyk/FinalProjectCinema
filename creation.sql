-- MySQL Script generated by MySQL Workbench
-- Mon Jun  7 12:46:04 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema cinema
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cinema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cinema` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `cinema` ;

-- -----------------------------------------------------
-- Table `cinema`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`role` ;

CREATE TABLE IF NOT EXISTS `cinema`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role` ENUM('admin', 'user') NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `role_UNIQUE` (`role` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`account_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`account_details` ;

CREATE TABLE IF NOT EXISTS `cinema`.`account_details` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name_en` VARCHAR(45) NOT NULL,
  `last_name_en` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`account` ;

CREATE TABLE IF NOT EXISTS `cinema`.`account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `role_id` INT NOT NULL,
  `account_details_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC),
  INDEX `fk_account_role_idx` (`role_id` ASC),
  INDEX `fk_account_account_details1_idx` (`account_details_id` ASC),
  CONSTRAINT `fk_account_role`
    FOREIGN KEY (`role_id`)
    REFERENCES `cinema`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_account_account_details1`
    FOREIGN KEY (`account_details_id`)
    REFERENCES `cinema`.`account_details` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`genre` ;

CREATE TABLE IF NOT EXISTS `cinema`.`genre` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `genre_en` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `genre_en_UNIQUE` (`genre_en` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`film`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`film` ;

CREATE TABLE IF NOT EXISTS `cinema`.`film` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name_en` VARCHAR(45) NOT NULL,
  `duration` INT NOT NULL,
  `price` DECIMAL NOT NULL,
  `genre_id` INT NOT NULL,
  `poster` LONGBLOB NOT NULL,
  `trailer` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_film_genre1_idx` (`genre_id` ASC),
  CONSTRAINT `fk_film_genre1`
    FOREIGN KEY (`genre_id`)
    REFERENCES `cinema`.`genre` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`type` ;

CREATE TABLE IF NOT EXISTS `cinema`.`type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type_en` ENUM('Standard', 'Lux', 'Super lux') NOT NULL,
  `price` DECIMAL NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`place`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`place` ;

CREATE TABLE IF NOT EXISTS `cinema`.`place` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `number` INT NOT NULL,
  `row` INT NOT NULL,
  `type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_place_type1_idx` (`type_id` ASC),
  CONSTRAINT `fk_place_type1`
    FOREIGN KEY (`type_id`)
    REFERENCES `cinema`.`type` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`status` ;

CREATE TABLE IF NOT EXISTS `cinema`.`status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `status_en` ENUM('Available', 'No places', 'Canceled') NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`session` ;

CREATE TABLE IF NOT EXISTS `cinema`.`session` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATE NOT NULL,
  `time` TIME NOT NULL,
  `min_price` DECIMAL NOT NULL,
  `max_price` DECIMAL NOT NULL,
  `film_id` INT NOT NULL,
  `status_id` INT NOT NULL,
  PRIMARY KEY (`id`, `status_id`),
  INDEX `fk_session_film1_idx` (`film_id` ASC),
  INDEX `fk_session_status1_idx` (`status_id` ASC),
  CONSTRAINT `fk_session_film1`
    FOREIGN KEY (`film_id`)
    REFERENCES `cinema`.`film` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_session_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `cinema`.`status` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`session_has_place`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`session_has_place` ;

CREATE TABLE IF NOT EXISTS `cinema`.`session_has_place` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `session_id` INT NOT NULL,
  `place_id` INT NOT NULL,
  `available` TINYINT NOT NULL DEFAULT 1,
  `book_time` TIMESTAMP(6) NULL,
  INDEX `fk_session_has_place_place1_idx` (`place_id` ASC),
  INDEX `fk_session_has_place_session1_idx` (`session_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_session_has_place_session1`
    FOREIGN KEY (`session_id`)
    REFERENCES `cinema`.`session` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_session_has_place_place1`
    FOREIGN KEY (`place_id`)
    REFERENCES `cinema`.`place` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`ticket` ;

CREATE TABLE IF NOT EXISTS `cinema`.`ticket` (
  `account_id` INT NOT NULL,
  `session_has_place_id` INT NOT NULL,
  `price` DECIMAL NOT NULL,
  INDEX `fk_ticket_account1_idx` (`account_id` ASC),
  PRIMARY KEY (`account_id`, `session_has_place_id`),
  INDEX `fk_ticket_session_has_place1_idx` (`session_has_place_id` ASC),
  CONSTRAINT `fk_ticket_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `cinema`.`account` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_session_has_place1`
    FOREIGN KEY (`session_has_place_id`)
    REFERENCES `cinema`.`session_has_place` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`film_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`film_status` ;

CREATE TABLE IF NOT EXISTS `cinema`.`film_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `status_en` ENUM("suggestion", "voting", "approved", "rejected") NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `status_en_UNIQUE` (`status_en` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`film_to_order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`film_to_order` ;

CREATE TABLE IF NOT EXISTS `cinema`.`film_to_order` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name_en` VARCHAR(45) NULL,
  `year` INT NULL,
  `poster` LONGBLOB NULL,
  `description` VARCHAR(255) NULL,
  `vote` INT NULL,
  `required_vote` INT NULL,
  `film_status_id` INT NOT NULL,
  `trailer` VARCHAR(255) NULL,
  `account_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_order_film_film_status1_idx` (`film_status_id` ASC),
  INDEX `fk_film_to_order_account1_idx` (`account_id` ASC),
  CONSTRAINT `fk_order_film_film_status1`
    FOREIGN KEY (`film_status_id`)
    REFERENCES `cinema`.`film_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_film_to_order_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `cinema`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`user_vote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinema`.`user_vote` ;

CREATE TABLE IF NOT EXISTS `cinema`.`user_vote` (
  `account_id` INT NOT NULL,
  `order_film_id` INT NOT NULL,
  PRIMARY KEY (`account_id`, `order_film_id`),
  INDEX `fk_account_has_order_film_order_film2_idx` (`order_film_id` ASC),
  INDEX `fk_account_has_order_film_account2_idx` (`account_id` ASC),
  CONSTRAINT `fk_account_has_order_film_account2`
    FOREIGN KEY (`account_id`)
    REFERENCES `cinema`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_account_has_order_film_order_film2`
    FOREIGN KEY (`order_film_id`)
    REFERENCES `cinema`.`film_to_order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



insert into role (role) value ('admin');
insert into role (role) value ('user');
    
insert into status (status_en) values ('Available');
insert into status (status_en) values ('No places');
insert into status (status_en) values ('Canceled');

insert into type (type_en, price) values ('Standard', 'Стандарт', 10);
insert into type (type_en, price) values ('Lux', 15);
insert into type (type_en, price) values ('Super lux', 20);

insert into place (number, `row`, type_id) values (1, 1, 1);
insert into place (number, `row`, type_id) values (2, 1, 1);
insert into place (number, `row`, type_id) values (3, 1, 1);
insert into place (number, `row`, type_id) values (4, 1, 1);
insert into place (number, `row`, type_id) values (5, 1, 1);
insert into place (number, `row`, type_id) values (6, 1, 1);
insert into place (number, `row`, type_id) values (7, 1, 1);
insert into place (number, `row`, type_id) values (8, 1, 1);
insert into place (number, `row`, type_id) values (9, 1, 1);
insert into place (number, `row`, type_id) values (10, 1, 1);

insert into place (number, `row`, type_id) values (11, 2, 1);
insert into place (number, `row`, type_id) values (12, 2, 1);
insert into place (number, `row`, type_id) values (13, 2, 1);
insert into place (number, `row`, type_id) values (14, 2, 1);
insert into place (number, `row`, type_id) values (15, 2, 1);
insert into place (number, `row`, type_id) values (16, 2, 1);
insert into place (number, `row`, type_id) values (17, 2, 1);
insert into place (number, `row`, type_id) values (18, 2, 1);
insert into place (number, `row`, type_id) values (19, 2, 1);
insert into place (number, `row`, type_id) values (20, 2, 1);

insert into place (number, `row`, type_id) values (21, 3, 1);
insert into place (number, `row`, type_id) values (22, 3, 1);
insert into place (number, `row`, type_id) values (23, 3, 1);
insert into place (number, `row`, type_id) values (24, 3, 1);
insert into place (number, `row`, type_id) values (25, 3, 1);
insert into place (number, `row`, type_id) values (26, 3, 1);
insert into place (number, `row`, type_id) values (27, 3, 1);
insert into place (number, `row`, type_id) values (28, 3, 1);
insert into place (number, `row`, type_id) values (29, 3, 1);
insert into place (number, `row`, type_id) values (30, 3, 1);

insert into place (number, `row`, type_id) values (31, 4, 2);
insert into place (number, `row`, type_id) values (32, 4, 2);
insert into place (number, `row`, type_id) values (33, 4, 2);
insert into place (number, `row`, type_id) values (34, 4, 2);
insert into place (number, `row`, type_id) values (35, 4, 2);
insert into place (number, `row`, type_id) values (36, 4, 2);
insert into place (number, `row`, type_id) values (37, 4, 2);
insert into place (number, `row`, type_id) values (38, 4, 2);
insert into place (number, `row`, type_id) values (39, 4, 2);
insert into place (number, `row`, type_id) values (40, 4, 2);

insert into place (number, `row`, type_id) values (41, 5, 3);
insert into place (number, `row`, type_id) values (42, 5, 3);
insert into place (number, `row`, type_id) values (43, 5, 3);
insert into place (number, `row`, type_id) values (44, 5, 3);
insert into place (number, `row`, type_id) values (45, 5, 3);
insert into place (number, `row`, type_id) values (46, 5, 3);
insert into place (number, `row`, type_id) values (47, 5, 3);
insert into place (number, `row`, type_id) values (48, 5, 3);
insert into place (number, `row`, type_id) values (49, 5, 3);
insert into place (number, `row`, type_id) values (50, 5, 3);

insert into genre (genre_en) values ('Comedy');
insert into genre (genre_en) values ('Action');
insert into genre (genre_en) values ('Horror');
insert into genre (genre_en) values ('Detective');

insert into film_status (status_en) values ('suggestion');
insert into film_status (status_en) values ('voting');
insert into film_status (status_en) values ('approved');
insert into film_status (status_en) values ('rejected');

insert into account_details (first_name_en, last_name_en, email, phone) 
	values ('Adminname', 'Adminlastname', 'admin@admin.com', '0501236547');
insert into account (login, password, role_id, account_details_id) 
	values ('admin', 'KsETDDeZzUn6W9CcOL7VCJSkW+xLN7OunQKtjJIR0oE=$Scq7jb19GUel7gMXdgzDMsP+cMt3w2skvG2UjNQatmw=', 
    (select id from role where role = 'admin'), (select id from account_details where email = 'admin@admin.com'));
    
insert into account_details (first_name_en, last_name_en, email, phone) 
	values ('Username', 'Userlastname', 'user@user.com', '0501236549');
insert into account (login, password, role_id, account_details_id) 
	values ('user', 'DdhPz9itGIlqgxPTyP+SbYCDqvalSAyxxH5dB3sgvLc=$VPEqWUGvLBNqYz5q7QRhD7YnAXnjhxl5K/ihiZsXvpU=', 
    (select id from role where role = 'user'), (select id from account_details where email = 'user@user.com'));
